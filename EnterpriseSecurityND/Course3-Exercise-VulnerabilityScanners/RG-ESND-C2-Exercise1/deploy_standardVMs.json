{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "UniqueID": {
        "type": "string",
        "metadata": {
            "description": "Enter Any 6 AlphaNumeraic Values Starting With An Alphabet In LowerCase. Example: a14d6e"
          }
      }

  },
  "variables": {
    "networkSecurityGroupName": "jumpvm-nsg",
    "jumpvmvirtualNetworkName": "jumpvm-vnet",
    "location": "[resourceGroup().location]",
    "addressPrefix": "10.0.0.0/24",
    "subnetPrefix": "10.0.0.0/24",
    "jumpvmsubnetName": "jumpvm-subnet",
    "publicIpAddressName": "jumpvm-pip",
    "publicIpAddressType": "Dynamic",
    "jumpvmDnsName": "[concat('jumpvm',uniqueString(resourceGroup().id))]",
    "jumpvmNetworkInterfaceName": "jumpvm-nic",
    "virtualMachineName": "[concat('windows-', parameters('UniqueID'))]",
    "virtualMachineSize": "Standard_DS1_v2",
    "jumpVmStorageAccountType": "Standard_LRS",
    "azureSubscriptionID": "[subscription().subscriptionId]",
    "subscriptionid": "[subscription().subscriptionId]",
    "labvmnetworkSecurityGroupName": "labvm-nsg",
    "labvmvirtualNetworkName": "labvm-vnet",
    "labvmsubnetName": "labvm-subnet",
    "labvmpublicIpAddressName": "[concat('Ms2-', 'ip')]",
    "labvmpublicIpAddressType": "Dynamic",
    "labvmDnsName": "[concat('labvm',uniqueString(resourceGroup().id))]",
    "labvmNetworkInterfaceName": "ms2-nic",
    "win10virtualMachineName": "[concat('Ms2-', parameters('UniqueID'))]",
    "osDiskType": "Standard_LRS",
    "win10virtualMachineSize": "Standard_DS1_v2",
    "labVmStorageAccountType": "Standard_LRS",


    "networkSecurityGroupNameLinux": "[concat('ubuntu', '-nsg')]",
    "networkSecurityGroupRulesLinux": [
      {
        "name": "SSH",
        "properties": {
          "priority": 300,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "22"
        }
      },
{
                        "name": "Port_8000",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8000",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_8834",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8834",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }

    ],
    "publicIpAddressNameLinux": "[concat('Turnkey-', 'ip')]",

    "publicIpAddressNameMs2": "[concat('Ms2-', 'ip')]",
    "AzureSubscriptionID": "[subscription().subscriptionId]",
    "AzureTenantID": "[subscription().tenantId]",
    "labvmnsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('labvmnetworkSecurityGroupName'))]",

    "networkSecurityGroupNamenessus": "nessus-nsg",
    "publicIpAddressNamenessus": "[concat('nessus-', 'ip')]",
    "publicIpAddressDNSNamenessus": "[concat('nessus', parameters('UniqueID'))]",
    "networkInterfaceNamenessus": "[concat('nessus-', parameters('UniqueID'))]",
    "nsgIdnessus": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupNamenessus'))]",
    "virtualMachineNamenessus": "[concat('nessus-', parameters('UniqueID'))]",
    "virtualMachineSizenessus": "Standard_DS1_v2",
    "virtualMachineComputerName": "nessus",
    "publicIpAddressTypeLinux": "Static",
    "publicIpAddressSkuLinux": "Basic",
    "subnetName": "default",
    "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('jumpvmvirtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
    "networkInterfaceNameLinux": "[concat('ubuntu-', parameters('UniqueID'))]",
    "nsgIdLinux": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupNameLinux'))]",
    "sshKeyPath": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
    "virtualMachineNameLinux": "[concat('Turnkey-', parameters('UniqueID'))]",
    "virtualMachineSizeLinux": "Standard_DS1_v2",
    "publicIpAddressDNSName": "[concat('jumpvm', parameters('UniqueID'))]",
    "publicIpAddressDNSNameLinux": "[concat('turnkey', parameters('UniqueID'))]",
    "labvmpublicIpAddressDNSName": "[concat('ms2', parameters('UniqueID'))]"
  },

  "resources": [
    {
      "apiVersion": "2016-09-01",
      "name": "pid-e843308b-3ce2-42a2-b743-2f21b36a5e68",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1030,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('jumpvmvirtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2017-08-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/',variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2017-08-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIpAllocationMethod": "[variables('publicIpAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('jumpvmDnsName')]"
        }
      }
    },

    {
      "name": "[variables('jumpvmNetworkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('jumpvmvirtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('jumpvmvirtualNetworkName'), variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "name": "[variables('labvmnetworkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1030,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('labvmvirtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2017-08-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/',variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('labvmpublicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "location": "[variables('location')]",
      "properties": {
        "publicIpAllocationMethod": "[variables('labvmpublicIpAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('labvmpublicIpAddressDNSName'))]"
        }
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-10-01",
      "name": "[variables('labvmnetworkInterfaceName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('labvmnetworkSecurityGroupName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('labvmvirtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('labvmpublicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('labvmpublicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('labvmnsgId')]"
        }
      }
    },
    {
      "name": "[variables('win10virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-06-01",
      "location": "[variables('location')]",
      "plan": {
        "name": "kali",
        "publisher":"kali-linux",
        "product":"kali"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('labvmnetworkInterfaceName'))]"
      ],
      "properties": {

        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            },
            "diskSizeGB": 127
          },
          "imageReference": {
            "publisher": "kali-linux",
            "offer": "kali",
            "sku": "kali",
            "version": "2022.3.0"
          }
        },
        "osProfile": {
          "computerName": "Kali",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('labvmnetworkInterfaceName'))]"
            }
          ]
        }
      }
    },

    {
      "name": "[variables('networkSecurityGroupNameLinux')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": "[variables('networkSecurityGroupRulesLinux')]"
      }
    },
    {
      "name": "[variables('publicIpAddressNameLinux')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "location": "[variables('location')]",
      "properties": {
        "publicIpAllocationMethod": "[variables('publicIpAddressTypeLinux')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('publicIpAddressDNSNameLinux'))]"
        }
      },
      "sku": {
        "name": "[variables('publicIpAddressSkuLinux')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-10-01",
      "name": "[variables('networkInterfaceNameLinux')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupNameLinux'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('jumpvmvirtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressNameLinux'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressNameLinux'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgIdLinux')]"
        }
      }
    },
    {
      "name": "[variables('virtualMachineNameLinux')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "location": "[variables('location')]",
      "plan": {
        "name":"wordpress-ubuntu-18-04",
        "publisher":"cloud-infrastructure-services",
        "product":"wordpress-ubuntu-18-04"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceNameLinux'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSizeLinux')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "name": "[concat(variables('virtualMachineNameLinux'), '-osdisk')]",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "diskSizeGB": 127
          },
          "imageReference": {
            "publisher": "cloud-infrastructure-services",
            "offer": "wordpress-ubuntu-18-04",
            "sku": "wordpress-ubuntu-18-04",
            "version": "0.0.1"
          }
        },
        "osProfile": {
          "computerName": "TurnkeyWordpress",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceNameLinux'))]"
            }
          ]
        }

      }
    },
    {
      "name": "[variables('networkSecurityGroupNamenessus')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": "[variables('networkSecurityGroupRulesLinux')]"
      }
    },
    {
      "name": "[variables('publicIpAddressNamenessus')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "location": "[variables('location')]",
      "properties": {
        "publicIpAllocationMethod": "[variables('publicIpAddressTypeLinux')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('publicIpAddressDNSNamenessus'))]"
        }
      },
      "sku": {
        "name": "[variables('publicIpAddressSkuLinux')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-10-01",
      "name": "[variables('networkInterfaceNamenessus')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupNamenessus'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('jumpvmvirtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressNamenessus'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressNamenessus'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgIdnessus')]"
        }
      }
    },
    {
      "name": "[variables('virtualMachineNamenessus')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceNamenessus'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSizenessus')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "imageReference": {
            "publisher": "tenable",
            "offer": "tenablecorenessus",
            "sku": "tenablecorenessusbyol",
            "version": "2022.07.27"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceNamenessus'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('virtualMachineComputerName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "patchSettings": {
              "patchMode": "ImageDefault"
            }
          }
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "plan": {
        "name": "tenablecorenessusbyol",
        "publisher": "tenable",
        "product": "tenablecorenessus"
      }
    }

  ],
  "outputs": {
    "jumpVmDNSName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))).dnsSettings.fqdn]"
    },
    "Ms2 VM username": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "Ms2 VM Password": {
      "type": "string",
      "value": "[parameters('adminPassword')]"
    },
    "Nessus Public IP": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressNamenessus'))).ipAddress]",
      "type": "string"
    },

    "Nessus Username": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "Nessus VM Password": {
      "type": "string",
      "value": "[parameters('adminPassword')]"
    },

    "Turnkey VM Public IP": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressNameLinux'))).ipAddress]",
      "type": "string"
    },

    "Turnkey VM Username": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "Turnkey VM Password": {
      "type": "string",
      "value": "[parameters('adminPassword')]"
    }

  }
}
      