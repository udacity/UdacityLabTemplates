{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
  
      "adminUsername": {
        "type": "string"
      },
      "adminPassword": {
        "type": "securestring"
      },
      "UniqueID": {
        "type": "string",
        "metadata": {
            "description": "Enter Any 6 AlphaNumeraic Values Starting With An Alphabet In LowerCase. Example: a14d6e"
          }
      }
    },
    "variables": {
      "subscriptionid": "[subscription().subscriptionId]",
      "AzureSubscriptionID": "[subscription().subscriptionId]",
      "AzureTenantID": "[subscription().tenantId]",
      "location": "[resourceGroup().location]",
      "rgName": "[resourceGroup().name]",
      "networkInterfaceName": "[concat(variables('prefix'), '-nic')]",
      "networkSecurityGroupName": "[concat(variables('prefix'), '-nsg')]",
      "prefix": "vm",
      "publicIpAddressDNSName": "[concat(variables('prefix'), uniqueString(resourceGroup().id))]",
      "publicIpAddressName": "[concat(variables('prefix'), '-pip')]",
      "subnetName": "default",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/',variables('virtualNetworkName'), variables('subnetName'))]",
      "virtualMachineSize": "Standard_B2s",
      "virtualNetworkName": "vNet",
      "vmName": "[concat('LabVM-',parameters('UniqueID'))]"
    },
    "resources": [
      {
        "apiVersion": "2016-09-01",
        "name": "pid-e843308b-3ce2-42a2-b743-2f21b36a5e68",
        "type": "Microsoft.Resources/deployments",
        "properties": {
          "mode": "Incremental",
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "resources": []
          }
        }
      },
      {
        "name": "[variables('vmName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2019-07-01",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
        ],
        "properties": {
          "osProfile": {
            "computerName": "[variables('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "windowsConfiguration": {
              "provisionVmAgent": "true"
            }
          },
          "hardwareProfile": {
            "vmSize": "[variables('virtualMachineSize')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2019-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "fromImage",
              "name": "[concat(variables('vmName'), '-osdisk')]",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "dataDisks": []
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('vmName'),'/', 'winExtension')]",
        "apiVersion": "2019-07-01",
        "location": "[resourceGroup().location]",
        "comments": "Script",
        "tags": {
          "displayName": "VM Extension"
        },
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
        ],
        "properties": {
          "publisher": "Microsoft.Compute",
          "type": "CustomScriptExtension",
          "typeHandlerVersion": "1.8",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "https://raw.githubusercontent.com/UdacityLabs/Udacity/main/EnterpriseSecurityND/Course2-Exercise-VulnerabilityScanners/RG-jumpvm/script.ps1"
            ]
          },
          "protectedSettings": {
            "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File script.ps1"
          }
        }
      },
      {
        "name": "[variables('virtualNetworkName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2019-09-01",
        "location": "[variables('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            }
          ]
        }
      },
      {
        "name": "[variables('networkInterfaceName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2019-07-01",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
          "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
          }
        }
      },
      {
        "name": "[variables('publicIpAddressName')]",
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2019-02-01",
        "location": "[variables('location')]",
        "properties": {
          "publicIpAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[variables('publicIpAddressDNSName')]"
          }
        }
      },
      {
        "name": "[variables('networkSecurityGroupName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-02-01",
        "location": "[variables('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-rdp",
              "properties": {
                "priority": 1030,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "3389"
              }
            }
          ]
        }
      }
    ],
    "outputs": {
      "LabVM DNS Name": {
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))).dnsSettings.fqdn]",
        "type": "string"
      },
      "LabVM Admin Username": {
        "type": "string",
        "value": "[parameters('adminUsername')]"
      },
      "LabVM Admin Password": {
        "type": "string",
        "value": "[parameters('adminPassword')]"
      },
      "Suffix/UniqueID": {
        "type": "string",
        "value": "[parameters('UniqueID')]"
      }
    }
  }